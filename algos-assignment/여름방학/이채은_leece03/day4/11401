#include<stdio.h>

long int m = 1000000007;
long int dp[4000001];


long long modv(long long x, long long n) {
	long long total = 1;
	x %= m;
	while (n > 0) {
		if (n % 2 == 1) { // n이 홀수인 경우
			total = (total * x) % m;
		}
		x = (x * x) % m; // x를 제곱하고
		n /= 2;          // 지수를 반으로 줄임
	}
	return total;
}

int main() {
	long int n, k;
	dp[0] = 1;
	dp[1] = 1;

	scanf("%ld %ld", &n, &k);

	for (int i = 2; i <= n; i++) {
		dp[i] = (dp[i - 1]%m * i) % m;
	}


	long long answer = (dp[n] * modv(dp[k], m - 2) % m * modv(dp[n - k], m - 2) % m) % m;
	printf("%lld\n", answer);

	return 0;
}
