#include<iostream>
#include <algorithm>
#include <numeric> 
#include <vector> 
using namespace std;
#define ll long long
ll  m, w;
const ll MOD = 1000000007;

ll modpow(ll a, ll e) {
    ll r = 1;
    while (e) {
        if (e & 1)r = (r * a) % MOD;
        a = (a * a) % MOD;
        e >>= 1;
    }
    return r;
}


int main() {
	cin >> m>>w;

    if (w == 0) {
        cout << 1; 
        return 0;
    }
    vector<ll> fact(m + 1), invfact(m + 1);
    fact[0] = 1;
    for (long long i = 1; i <= m; ++i) fact[i] = fact[i - 1] * i % MOD;

    invfact[m] = modpow(fact[m], MOD - 2);
    for (ll i = m; i >= 1; --i) invfact[i - 1] = invfact[i] * i % MOD;

    ll res = fact[m];
    res = res * invfact[w] % MOD;
    res = res * invfact[m - w] % MOD;

    cout << res << '\n';

	return 0;
}
