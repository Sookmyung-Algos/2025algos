#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;

int n, result = 987654321;
int arr[20][20];
bool check[20];

int score() {
    int score1 = 0, score2 = 0;

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (check[i] && check[j]) {
                score1 += arr[i][j] + arr[j][i];
            }
            else if (!check[i] && !check[j]) {
                score2 += arr[i][j] + arr[j][i];
            }
        }
    }

    return abs(score1 - score2);
}

void dfs(int depth, int cnt) {
    if (cnt >= 1 && cnt <= n / 2) {  
        result = min(result, score());
    }

    for (int i = depth; i < n; i++) {
        check[i] = true;
        dfs(i + 1, cnt + 1);
        check[i] = false;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); 

    cin >> n;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cin >> arr[i][j];
        }
    }

    dfs(0, 0);
    cout << result;

    return 0;
}
